<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-09-03T22:55:03+05:30</updated><id>http://localhost:4000/feed.xml</id><title type="html">Prajwal Shetty</title><subtitle>A game developer with 5 years of experience in the industry. I specialize in game programming and 3D math, with expertise in Unity, Unreal Engine 5, and Blender Python API. I have a particular interest in open-world games and virtual worlds, and I love creating immersive experiences that transport players to new and exciting places. In my spare time, I enjoy staying up-to-date with the latest developments in technology and exploring new programming concepts. On this blog, I share my thoughts and insights on game development, programming, and tech. Whether you&apos;re a fellow game developer, a tech enthusiast, or just someone looking for a good read, I hope you&apos;ll find something of interest here. As well as my professional interests, I also have a passion for travel and exploring new places. You may find the occasional post about my adventures, and how they inspire my work. I love to write and believe that blogging is an excellent way to express my thoughts and ideas. I hope you&apos;ll find my writing engaging, informative, and thought-provoking. Thanks for stopping by!</subtitle><author><name>Prajwal shetty</name><email>mail@prajwalshetty.com</email></author><entry><title type="html">Runtime mesh generation in Unreal Engine 5 - With LODs</title><link href="http://localhost:4000/ue5/KTX-and-DRACO-compression-for-runtime-mesh-is-Unity/" rel="alternate" type="text/html" title="Runtime mesh generation in Unreal Engine 5 - With LODs" /><published>2023-09-02T00:00:00+05:30</published><updated>2023-09-02T00:00:00+05:30</updated><id>http://localhost:4000/ue5/KTX%20and%20DRACO%20compression%20for%20runtime%20mesh%20is%20Unity</id><content type="html" xml:base="http://localhost:4000/ue5/KTX-and-DRACO-compression-for-runtime-mesh-is-Unity/">&lt;h1 id=&quot;runtime-mesh-generation-in-unreal-engine-5---with-lods&quot;&gt;Runtime mesh generation in Unreal Engine 5 - With LODs&lt;/h1&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;There are mainly&lt;/p&gt;</content><author><name>Prajwal shetty</name><email>mail@prajwalshetty.com</email></author><category term="ue5" /><category term="game" /><category term="unity" /><category term="server-build" /><summary type="html">Deploying a Unity Linux game server on the Microsoft Azure PlayFab service is a great way to host your multiplayer game and manage player data. With Azure PlayFab, game developers can leverage cloud-based infrastructure and services to scale their games and provide an optimal experience for players. In this guide, we will take you through the steps involved in deploying your Unity Linux game server on the PlayFab service, all at no cost.</summary></entry><entry><title type="html">Runtime mesh generation in Unreal Engine 5 - With LODs</title><link href="http://localhost:4000/ue5/Automating-3D-work-with-blender-plugins/" rel="alternate" type="text/html" title="Runtime mesh generation in Unreal Engine 5 - With LODs" /><published>2023-09-02T00:00:00+05:30</published><updated>2023-09-02T00:00:00+05:30</updated><id>http://localhost:4000/ue5/Automating%203D%20work%20with%20blender%20plugins</id><content type="html" xml:base="http://localhost:4000/ue5/Automating-3D-work-with-blender-plugins/">&lt;h1 id=&quot;runtime-mesh-generation-in-unreal-engine-5---with-lods&quot;&gt;Runtime mesh generation in Unreal Engine 5 - With LODs&lt;/h1&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;There are mainly&lt;/p&gt;</content><author><name>Prajwal shetty</name><email>mail@prajwalshetty.com</email></author><category term="ue5" /><category term="game" /><category term="unity" /><category term="server-build" /><summary type="html">Deploying a Unity Linux game server on the Microsoft Azure PlayFab service is a great way to host your multiplayer game and manage player data. With Azure PlayFab, game developers can leverage cloud-based infrastructure and services to scale their games and provide an optimal experience for players. In this guide, we will take you through the steps involved in deploying your Unity Linux game server on the PlayFab service, all at no cost.</summary></entry><entry><title type="html">Runtime mesh generation in Unreal Engine 5 - With LODs</title><link href="http://localhost:4000/ue5/Generating-Runtime-Mesh-In-Unreal-Engine/" rel="alternate" type="text/html" title="Runtime mesh generation in Unreal Engine 5 - With LODs" /><published>2023-08-30T00:00:00+05:30</published><updated>2023-08-30T00:00:00+05:30</updated><id>http://localhost:4000/ue5/Generating%20Runtime%20Mesh%20In%20Unreal%20Engine</id><content type="html" xml:base="http://localhost:4000/ue5/Generating-Runtime-Mesh-In-Unreal-Engine/">&lt;h1 id=&quot;runtime-mesh-generation-in-unreal-engine-5-c---with-lods&quot;&gt;Runtime mesh generation in Unreal Engine 5 (C++) - With LODs&lt;/h1&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In this blog we will go through to major techniques to generate runtime meshes in Unreal Engine 5. We will also look at how to generate LODs for these meshes. Generating meshes at runtime is a very powerful tool to have in your arsenal. It can be used to create procedural levels, terrain, foliage, etc.&lt;/p&gt;

&lt;h2 id=&quot;procedural-mesh-component&quot;&gt;Procedural Mesh Component&lt;/h2&gt;
&lt;p&gt;Using Unreal Engine’s inbuilt mesh generation component is the easiest way to generate meshes at runtime. It is a component that can be added to any actor and can be used to generate meshes at runtime. It is also very easy to use. It has a few limitations though. It can only generate meshes with a single material. It also does not support LODs.&lt;/p&gt;

&lt;p&gt;The official documentation for the Procedural Mesh Component can be found &lt;a href=&quot;https://docs.unrealengine.com/5.2/en-US/API/Plugins/ProceduralMeshComponent/UProceduralMeshComponent/&quot;&gt;here&lt;/a&gt;. The documentation is very basic and does not cover all the functions. You can also go through the actual source code for more deep dive into the component.&lt;/p&gt;

&lt;h3 id=&quot;creating-a-procedural-mesh-component&quot;&gt;Creating a Procedural Mesh Component&lt;/h3&gt;

&lt;p&gt;To use this component, include the “ProceduralMeshComponent” path in the build.cs file of your project:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PublicDependencyModuleNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddRange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;&quot;Core&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;CoreUObject&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Engine&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;InputCore&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ProceduralMeshComponent&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also, after 4.27, plugins can now depend on other plugins, so in case you are working on a plugin instead of a project, you will have to add this to your .uplugin file:&lt;/p&gt;

&lt;p&gt;Then include the header file in your cpp file:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Modules&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Plugins&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ProceduralMeshComponent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Enabled&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Prajwal shetty</name><email>mail@prajwalshetty.com</email></author><category term="UE5" /><category term="game" /><category term="unreal-engine" /><category term="graphics" /><summary type="html">Deploying a Unity Linux game server on the Microsoft Azure PlayFab service is a great way to host your multiplayer game and manage player data. With Azure PlayFab, game developers can leverage cloud-based infrastructure and services to scale their games and provide an optimal experience for players. In this guide, we will take you through the steps involved in deploying your Unity Linux game server on the PlayFab service, all at no cost.</summary></entry><entry><title type="html">About this site</title><link href="http://localhost:4000/About-this-site/" rel="alternate" type="text/html" title="About this site" /><published>2023-02-15T00:00:00+05:30</published><updated>2023-02-15T00:00:00+05:30</updated><id>http://localhost:4000/About%20this%20site</id><content type="html" xml:base="http://localhost:4000/About-this-site/">&lt;p&gt;Welcome to my personal blog! My name is Prajwal Shetty, and I’m a game developer with 5 years of experience in the industry. I specialize in game programming and 3D math, with expertise in Unity, Unreal Engine 5, and Blender Python API.&lt;/p&gt;

&lt;p&gt;I have a particular interest in open-world games and virtual worlds, and I love creating immersive experiences that transport players to new and exciting places. In my spare time, I enjoy staying up-to-date with the latest developments in technology and exploring new programming concepts.&lt;/p&gt;

&lt;p&gt;On this blog, I share my thoughts and insights on game development, programming, and tech. Whether you’re a fellow game developer, a tech enthusiast, or just someone looking for a good read, I hope you’ll find something of interest here.&lt;/p&gt;

&lt;p&gt;As well as my professional interests, I also have a passion for travel and exploring new places. You may find the occasional post about my adventures, and how they inspire my work.&lt;/p&gt;

&lt;p&gt;I love to write and believe that blogging is an excellent way to express my thoughts and ideas. I hope you’ll find my writing engaging, informative, and thought-provoking. Thanks for stopping by!&lt;/p&gt;

&lt;h3 id=&quot;tech-stack-used-to-build-this-site&quot;&gt;Tech stack used to build this site:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/&quot; target=&quot;_blank&quot;&gt;Jekyll&lt;/a&gt; 
&lt;!-- {:target=&quot;_blank&quot;} opens the link in a new tab --&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pages.github.com/&quot; target=&quot;_blank&quot;&gt;Github pages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloudinary.com/&quot; target=&quot;_blank&quot;&gt;Cloudinary&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://giscus.app/&quot; target=&quot;_blank&quot;&gt;Giscus.app&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mmistakes/minimal-mistakes&quot; target=&quot;_blank&quot;&gt;Minimal Mistakes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://openai.com/blog/chatgpt/&quot; target=&quot;_blank&quot;&gt;ChatGpt&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloudfare.com/&quot; target=&quot;_blank&quot;&gt;Cloudfare&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://domains.google/&quot; target=&quot;_blank&quot;&gt;Google Domains&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tools-used&quot;&gt;Tools used:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.adobe.com/express/&quot; target=&quot;_blank&quot;&gt;Adobe Express&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.fotor.com/&quot; target=&quot;_blank&quot;&gt;Fotor.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://realfavicongenerator.net/&quot; target=&quot;_blank&quot;&gt;Realfavicongenerator.net&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.privacypolicies.com/&quot; target=&quot;_blank&quot;&gt;Privacypolicies.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;third-party-integrations&quot;&gt;Third party integrations&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://analytics.google.com/analytics/web/&quot; target=&quot;_blank&quot;&gt;Google Analytics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dev-environment&quot;&gt;Dev Environment&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;OS:
    &lt;ul&gt;
      &lt;li&gt;Windows 11&lt;/li&gt;
      &lt;li&gt;WSL2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;IDE:
    &lt;ul&gt;
      &lt;li&gt;JetBrains Rider&lt;/li&gt;
      &lt;li&gt;VS Code&lt;/li&gt;
      &lt;li&gt;Visual Studio 19/22&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can download my resume &lt;a href=&quot;https://res.cloudinary.com/dwfkishzf/image/upload/v1682509226/Prajwal_Shetty_April-23_okwl4k.pdf&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;&lt;/p&gt;</content><author><name>Prajwal shetty</name><email>mail@prajwalshetty.com</email></author><summary type="html">On this blog, I share my thoughts and insights on game development, programming, and tech. Whether you&apos;re a fellow game developer, a tech enthusiast, or just someone looking for a good read, I hope you&apos;ll find something of interest here.</summary></entry></feed>